{"name":"LSPOpt","tagline":"Python implementation of a multitaper window method for estimating Wigner spectra for certain locally stationary processes","body":"# LSPOpt\r\n\r\nThis module is a Python implementation of the multitaper window method \r\ndescribed in [\\[1\\]](#references) for estimating Wigner spectra for certain locally\r\nstationary processes.\r\n\r\nAbstract from [\\[1\\]](#references):\r\n\r\n> This paper investigates the time-discrete multitapers that give a mean square error optimal Wigner spectrum estimate for a class\r\n> of locally stationary processes (LSPs). The accuracy in the estimation of the time-variable Wigner spectrum of the LSP is evaluated\r\n> and compared with other frequently used methods. The optimal multitapers are also approximated by Hermite functions, which is\r\n> computationally more efficient, and the errors introduced by this approximation are studied. Additionally, the number of windows\r\n> included in a multitaper spectrum estimate is often crucial and an investigation of the error caused by limiting this number is made.\r\n> Finally, the same optimal set of weights can be stored and utilized for different window lengths. As a result, the optimal multitapers\r\n> are shown to be well approximated by Hermite functions, and a limited number of windows can be used for a mean square error\r\n> optimal spectrogram estimate.\r\n    \r\n## Installation\r\n\r\nInstall via pip:\r\n\r\n    pip install git+https://github.com/hbldh/lspopt.git#egg=lspopt\r\n\r\n## Testing\r\n\r\nTest with `nosetests`:\r\n\r\n    nosetests tests/ \r\n\r\n## Usage\r\n\r\nTo generate the taper windows only, run the `lspopt` method:\r\n\r\n    >> from lspopt import lspopt\r\n    >> H, w = lspopt(N=256, c_parameter=20.0)\r\n    \r\n\r\nThere is also a convenience method for using the `scipy`  spectrogram method\r\nwith the `lspopt` multitaper windows:\r\n\r\n    >> from lspopt import spectrogram_lspopt\r\n    >> f, t, Sxx = spectrogram_lspopt(x, fs, c_parameter=20.0)\r\n    \r\nThis can then be plotted with e.g. `matplotlib`.\r\n\r\n## Example\r\n\r\nOne can generate a [chirp](https://docs.scipy.org/doc/scipy-0.16.0/reference/generated/scipy.signal.chirp.html)\r\nrealization and run spectrogram methods on this. \r\n\r\n    import numpy as np\r\n    from scipy.signal import chirp, spectrogram\r\n    import matplotlib.pyplot as plt\r\n    \r\n    from lspopt.lsp import spectrogram_lspopt\r\n    \r\n    fs = 10e3\r\n    N = 1e5\r\n    amp = 2 * np.sqrt(2)\r\n    noise_power = 0.001 * fs / 2\r\n    time = np.arange(N) / fs\r\n    freq = np.linspace(1e3, 2e3, N)\r\n    x = amp * chirp(time, 1e3, 2.0, 6e3, method='quadratic') + \\\r\n        np.random.normal(scale=np.sqrt(noise_power), size=time.shape)\r\n    \r\n    f, t, Sxx = spectrogram(x, fs)\r\n    \r\n    ax = plt.subplot(211)\r\n    ax.pcolormesh(t, f, Sxx)\r\n    ax.set_ylabel('Frequency [Hz]')\r\n    ax.set_xlabel('Time [sec]')\r\n    \r\n    f, t, Sxx = spectrogram_lspopt(x, fs, c_parameter=20.0)\r\n    \r\n    ax = plt.subplot(212)\r\n    ax.pcolormesh(t, f, Sxx)\r\n    ax.set_ylabel('Frequency [Hz]')\r\n    ax.set_xlabel('Time [sec]')\r\n    \r\n    plt.show()\r\n    \r\n![Spectrogram plot](hbldh.github.com/lspopt/plot.png)\r\n \r\n\r\n## References\r\n\r\n\\[1\\] [Hansson-Sandsten, M. (2011). Optimal multitaper Wigner spectrum \r\nestimation of a class of locally stationary processes using Hermite functions. \r\nEURASIP Journal on Advances in Signal Processing, 2011, 10.](http://asp.eurasipjournals.com/content/pdf/1687-6180-2011-980805.pdf)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}